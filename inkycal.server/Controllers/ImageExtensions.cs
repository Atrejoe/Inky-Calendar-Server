using InkyCal.Utils;
using Microsoft.AspNetCore.Mvc;
using SixLabors.ImageSharp;
using System.IO;

namespace InkyCal.Server.Controllers
{
    /// <summary>
    /// A helper class for converting images to <see cref="ActionResult"/>s.
    /// </summary>
    public static class ImageExtensions
    {

        /// <summary>
        /// Returns a <see cref="FileContentResult"/> from an image, generated by <see cref="IPanel.GetImage"/>
        /// </summary>
        /// <param name="controller"></param>
        /// <param name="image"></param>
        /// <returns></returns>
        public static ActionResult Image(this ControllerBase controller, Image image)
        {
            using var stream = new MemoryStream();
            image.SaveAsPng(stream);
            return controller.File(
                fileContents: stream.ToArray(),
                contentType: "image/png");
        }

        /// <summary>
        /// Returns a <see cref="FileContentResult"/> from a <see cref="IPanel"/> for the specified <paramref name="model"/>.
        /// </summary>
        /// <param name="controller"></param>
        /// <param name="panel"></param>
        /// <param name="model"></param>
        /// <param name="requestedWidth"></param>
        /// <param name="requestedHeight"></param>
        /// <returns></returns>
        public static ActionResult Image(this ControllerBase controller, IPanel panel, DisplayModel model, int? requestedWidth = null, int? requestedHeight = null)
        {
            model.GetSpecs(out var width, out var height, out var colors);

            //NB: Web-based requests will specify portrait oriented dimensions.
            //    GetSpecs get landscpae-oriented dimensions
            //    Therefore flip-em!
            return controller.Image(panel, requestedHeight ?? width, requestedWidth ?? height, colors);
        }

        /// <summary>
        /// Returns a <see cref="FileContentResult"/> from <see cref="IPanel.GetImage"/> with specific dimensions and color space.
        /// </summary>
        /// <param name="controller"></param>
        /// <param name="panel"></param>
        /// <param name="width"></param>
        /// <param name="height"></param>
        /// <param name="colors"></param>
        /// <returns></returns>
        public static ActionResult Image(this ControllerBase controller, IPanel panel, int width, int height, Color[] colors)
        {
            using (var image = panel.GetImage(width, height, colors))
                return controller.Image(image);
        }
    }
}